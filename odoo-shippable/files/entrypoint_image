#!/usr/bin/env python

from __future__ import print_function

import os
import subprocess
import time


def docker_entrypoint():
    # Fix postgresql
    #  https://github.com/docker/docker/issues/783
    #   issuecomment-56013588
    cmds = [
        ["mkdir", "-p", "/etc/ssl/private-copy"],
        ["mkdir", "-p", "/etc/ssl/private"],
        ["mv", "/etc/ssl/private/*", "/etc/ssl/private-copy/"],
        ["rm", "-r", "/etc/ssl/private"],
        ["mv", "/etc/ssl/private-copy", "/etc/ssl/private"],
        ["chmod", "-R", "0700", "/etc/ssl/private"],
        ["chown", "-R", "postgres", "/etc/ssl/private"],
    ]
    for cmd in cmds:
        subprocess.call(' '.join(cmd), shell=True)

    # Patch to force start odoo as root
    sub_cmd1 = [
        'find', '-L', os.getenv("HOME"), '-name', 'server.py',
    ]
    subp1 = subprocess.Popen(sub_cmd1, stdout=subprocess.PIPE)
    sub_cmd2 = [
        'xargs', 'sed', '-i', "s/== 'root'/== 'force_root'/g"
    ]
    subprocess.Popen(sub_cmd2, stdin=subp1.stdout, stdout=subprocess.PIPE)

    # Start postgresql service
    # cmd = [
    #     'sudo -u postgres /usr/lib/postgresql/9.3/bin/postgres '
    #     '-c "config_file=/etc/postgresql/9.3/main/postgresql.conf"'
    # ]
    cmd = ['sudo', '/etc/init.d/postgresql', 'start']
    subprocess.Popen(cmd)
    print("Waiting to start psql service...")
    while True:
        psql_subprocess = subprocess.Popen(
            ["psql", '-l'], stdout=subprocess.PIPE,
            stderr=subprocess.PIPE)
        psql_subprocess.wait()
        if not bool(psql_subprocess.stderr.read()):
            break
        time.sleep(2)
    print("...psql service started.")
    return True


if __name__ == '__main__':
    docker_entrypoint()
